

# This file was *autogenerated* from the file aux.sage
from sage.all_cmdline import *   # import sage library

_sage_const_16 = Integer(16); _sage_const_64 = Integer(64); _sage_const_128 = Integer(128); _sage_const_192 = Integer(192); _sage_const_179 = Integer(179); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1)
from sage.all import *
from sqisign_parameters import *

aux_64 = int("ffffffffffffffff",_sage_const_16 )
aux_128 = aux_64 << _sage_const_64 
aux_192 = aux_64 << _sage_const_128 
aux_256 = aux_64 << _sage_const_192 
word_size = _sage_const_16  #word_size in hex digits == 64bits

p_cofactor_for_2f = int("00069c53c50d72bb318674d50cb0e80e86e4a593c926aa29",_sage_const_16 )

P_COFACTOR_FOR_2F_BITLENGTH = _sage_const_179 


def print_word(number):
	print(f"{(number&aux_64)}, {(number&aux_128)>>_sage_const_64 }, {(number&aux_192)>>_sage_const_128 }, {(number&aux_256)>>_sage_const_192 }")


def swap_numb(hex,hex_size):
		array = [_sage_const_0  for i in range(hex_size)]
		for j in range(_sage_const_0 ,hex_size,_sage_const_2 ):
			array[j] = hex[hex_size-_sage_const_2 -j]
			array[j+_sage_const_1 ] = hex[hex_size-_sage_const_1 -j]
			array[hex_size-_sage_const_2 -j] = hex[j]
			array[hex_size-_sage_const_1 -j] = hex[j+_sage_const_1 ]
		hex = ''.join(array)
		return hex

